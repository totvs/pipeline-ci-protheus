# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  analysis:
      name: Code Analysis
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: docker
          run: |
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp \
            -v ${{ github.workspace }}/analyser/config.json:/bin/conf/config.json \
            -v ${{ github.workspace }}/analyser/output:/bin/output \
            totvsengpro/advpl-tlpp-code-analyzer
  build:
      name: Build
      needs: [analysis]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Unzip includes
          run: cd ./protheus/includes && unzip includes.zip
        - name: docker
          run: |
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp/compile \
            -v ${{ github.workspace }}/protheus/includes:/tmp/includes \
            -v ${{ github.workspace }}/protheus/appserver.ini:/opt/totvs/appserver/appserver.ini \
            -v ${{ github.workspace }}/protheus/apo/:/opt/totvs/protheus/apo/ \
            totvsengpro/appserver-dev \
            ./appsrvlinux -compile -env=environment -files=/tmp/compile -includes=/tmp/includes
        - name: 'Upload custom RPO'
          uses: actions/upload-artifact@v3
          with:
            name: custom-rpo
            path: ${{ github.workspace }}/protheus/apo/custom.rpo
  tir:
      name: TIR
      needs: [build]
      runs-on: [self-hosted, linux, tir]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Apply custom RPO
          uses: actions/download-artifact@v3
          with:
            name: custom-rpo
            path: /share/protheus/apo/
        - name: Test Protheus Connection
          run: |
            curl localhost:8080
        - name: docker
          run: |
            HOME=/tmp python3 ${{ github.workspace }}/tir/CRMA980TESTSUITE.py
  patch:
      name: Patch Gen
      needs: [tir]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            clean: false
        - name: Download custom rpo
          uses: actions/download-artifact@v3
          with:
            name: custom-rpo
            path: ${{ github.workspace }}/protheus/apo/
        - name: Get patch files
          run: ls -lah ./protheus/apo && cd ./src && bash ../ci/scripts/list-files.sh
        - name: docker
          run: |
            docker run --rm \
            -v ${{ github.workspace }}/src:/tmp/compile \
            -v ${{ github.workspace }}/protheus/includes:/tmp/includes \
            -v ${{ github.workspace }}/protheus/appserver.ini:/opt/totvs/appserver/appserver.ini \
            -v ${{ github.workspace }}/protheus/apo/:/opt/totvs/protheus/apo/ \
            totvsengpro/appserver-dev \
            ./appsrvlinux -compile -genpatch -env=environment -files=/tmp/compile/sources.lst -includes=/tmp/includes -outgenpatch=/tmp/compile -patchtype=ptm
        - name: 'Upload patch'
          uses: actions/upload-artifact@v3
          with:
            name: custom-ptm
            path: ${{ github.workspace }}/src/custom.ptm
